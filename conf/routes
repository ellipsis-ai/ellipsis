# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET         /                                         @controllers.ApplicationController.index
GET         /add_to_slack                             @controllers.ApplicationController.addToSlack
GET         /sign_in_with_slack                       @controllers.ApplicationController.signInWithSlack(redirect: Option[String] ?= None)
GET         /new_behavior/:teamId                     @controllers.ApplicationController.newBehavior(teamId: String)
GET         /edit_behavior/:id                        @controllers.ApplicationController.editBehavior(id: String, justSaved: Option[Boolean] ?= None)
POST        /save_behavior                            @controllers.ApplicationController.saveBehavior
POST        /delete_behavior                          @controllers.ApplicationController.deleteBehavior
GET         /regex_validation_errors/:pattern         @controllers.ApplicationController.regexValidationErrorsFor(pattern: String)
GET         /version_info/:behaviorId                 @controllers.ApplicationController.versionInfoFor(behaviorId: String)
POST        /restore_to_version                       @controllers.ApplicationController.restoreToVersion
POST        /test_behavior_version                    @controllers.ApplicationController.testBehaviorVersion
GET         /authenticate/slack                       @controllers.SocialAuthController.authenticateSlack(redirect: Option[String] ?= None, team: Option[String] ?= None, channel: Option[String] ?= None)
GET         /install/slack                            @controllers.SocialAuthController.installForSlack(redirect: Option[String] ?= None, team: Option[String] ?= None, channel: Option[String] ?= None)
#POST        /authenticate/credentials        controllers.CredentialsAuthController.authenticate
#POST        /signUp                          controllers.SignUpController.signUp

GET         /get_item/:itemId/:itemType/:token        @controllers.DefaultStorage.getItem(itemId: String, itemType: String, token: String)
#NOCSRF
POST        /put_item                                 @controllers.DefaultStorage.putItem

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                             controllers.Assets.versioned(path="/public", file: Asset)
