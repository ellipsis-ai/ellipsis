version: 2
jobs:
  build:
    # branches:
    #   only:
    #     - master
    docker:
      - image: ellipsis/circleci_primary:1.0
        environment:
          AWS_REGION: us-east-1
          DB_HOST: localhost
          DB_PORT: 5432
          # JAVA_TOOL_OPTIONS: '-Dfile.encoding=UTF8 -Duser.timezone=UTC'
          _JAVA_OPTIONS: "-Xms512M -Xmx1024M -Xss1M"
      - image: postgres:9.6.2
        environment:
          POSTGRES_USER: ellipsis
          POSTGRES_DB: ellipsis-test
          POSTGRES_PASSWORD: ellipsis
    working_directory: ~/ellipsis
    steps:
      - checkout
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgress && exit 1
      - run:
          name: Without this caching does not work!
          command: |
            tar --help
            gzip --help
            cat npm_modules/*/package-lock.json > npm_modules/npm_checksum
      - restore_cache:
          keys:
            - v7-node-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v7-node-{{ checksum "package-lock.json" }}
      - restore_cache:
          keys:
            - v3-npm_modules-{{ checksum "npm_modules/npm_checksum" }}
      - run:
          name: Install npm dependencies
          command: |
            npm prune;npm install
      - save_cache:
          paths:
            - node_modules
          key: v7-node-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - save_cache:
          paths:
            - node_modules
          key: v7-node-{{ checksum "package-lock.json" }}
      - save_cache:
          paths:
            - npm_modules/ellipsis-action-logs/node_modules
            - npm_modules/ellipsis-aws-billing/node_modules
            - npm_modules/ellipsis-cal-date-format/node_modules
            - npm_modules/ellipsis-date-range-parser/node_modules
            - npm_modules/ellipsis-default-storage/node_modules
            - npm_modules/ellipsis-post-message/node_modules
            - npm_modules/ellipsis-random-response/node_modules
          key: v3-npm_modules-{{ checksum "npm_modules/npm_checksum" }}
      - run:
          name: Run JavaScript linter
          command: |
            npm run lint
      - run:
          name: Run Flow type-checking
          command: |
            npm run flow
      - run:
          name: Run JavaScript tests
          command: |
            npm test
      - restore_cache:
          keys:
            - v7-playapp-{{ .Branch }}-{{ checksum "build.sbt" }}
            - v7-playapp-{{ checksum "build.sbt" }}
      - run:
          name: Run Activator tests
          command: |
            cat /dev/null | activator test
      - save_cache:
          paths:
            - .ivy2
            - .sbt
            - ~/.ivy2
            - ~/.sbt
          key: v7-playapp-{{ .Branch }}-{{ checksum "build.sbt" }}
      - save_cache:
          paths:
            - .ivy2
            - .sbt
            - ~/.ivy2
            - ~/.sbt
          key: v7-playapp-{{ checksum "build.sbt" }}
      - run:
          name: Maybe deploy on stag01
          command: |
            if [ "${CIRCLE_BRANCH}" == "stag01" ]
            then
              mkdir ~/.aws
              echo -e "[el-stag01-deployer]\naws_access_key_id = ${STAG01_AWS_ACCESS_KEY}\naws_secret_access_key = ${STAG01_AWS_SECRET_KEY}\nregion = us-east-1" >> ~/.aws/credentials
              ./deploy/circleci_build stag01
            fi
      - run:
          name: Maybe deploy on prod
          command: |
            if [ "${CIRCLE_BRANCH}" == "prod" ]
            then
              mkdir ~/.aws
              echo -e "[el-prod-deployer]\naws_access_key_id = ${PROD_AWS_ACCESS_KEY}\naws_secret_access_key = ${PROD_AWS_SECRET_KEY}\nregion = us-east-1" >> ~/.aws/credentials
              ./deploy/circleci_build
            fi
